# -*- coding: utf-8 -*-
"""otsu_threshold.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/179BVwjGO5lseB0MYcmPAoWi3CJc5H_Po
"""

def otsu_threshold(gradient_magnitude):
  unique = np.unique(gradient_magnitude.ravel())
  our_bins = len(unique)
  hist, bins = np.histogram(gradient_magnitude.ravel(), bins=our_bins)

  probabilyty = hist/np.sum(hist)      # wartości
  threshold = 0

  for i in range(1, our_bins):         # szukany próg
    w1 = np.sum(probabilyty[:i])       # przedział nr 1
    w2 = np.sum(probabilyty[i:])       # przedział nr 2
    u1 = 0
    u2 = 0
    for j in range(1, i):
      u1 += bins[j] * probabilyty[j] / w1
    for j in range(i, our_bins):
      u2 += bins[j] * probabilyty[j] / w2
    sigma = w1 * w2 * (u2-u1)**2
    if sigma > threshold:
      threshold = sigma
  return threshold